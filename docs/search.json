[{"path":"https://bihealth.github.io/LimsaR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 sodaR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://bihealth.github.io/LimsaR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"January Weiner. Author, maintainer.","code":""},{"path":"https://bihealth.github.io/LimsaR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Weiner J (2025). LimsaR: Client SODAR. R package version 0.0.0.9000, https://bihealth.github.io/LimsaR/.","code":"@Manual{,   title = {LimsaR: Client for SODAR},   author = {January Weiner},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://bihealth.github.io/LimsaR/}, }"},{"path":"https://bihealth.github.io/LimsaR/index.html","id":"limsar","dir":"","previous_headings":"","what":"Client for SODAR","title":"Client for SODAR","text":"simple implementation SODAR API access SODAR features R.","code":""},{"path":"https://bihealth.github.io/LimsaR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Client for SODAR","text":"can install development version LimsaR GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"bihealth/LimsaR\")"},{"path":"https://bihealth.github.io/LimsaR/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Client for SODAR","text":"First, need know SODAR server . example, can https://sodar-demo.cubi.bihealth.org/. Second need get hold API token. Without token, able work LimsaR. server token, say, ‘asdfb891823basdfuwerbce’, start working need configure access. Now can get data frame containing projects categories visible : check exactly : large part SODAR API implemented. can create modify projects. can upload download sample sheets. can create manipulate tickets, landing zones delete requests. example, project UUID project study iRODS associated, can create landing zone check status, validate move ","code":"library(LimsaR) token <- \"asdfb891823basdfuwerbce\" sodar_url <- c(\"https://sodar-demo.cubi.bihealth.org\") sodar_config(token, sodar_url) projects <- sodar_project_list() sodar_whoami() lz <- sodar_lz_create(project_uuid) # gets the UUID of the LZ lz_uuid <- lz$sodar_uuid sodar_lz_status(lz_uuid) sodar_lz_move(lz_uuid)"},{"path":"https://bihealth.github.io/LimsaR/index.html","id":"sodar-api-vs-limsar","dir":"","previous_headings":"","what":"SODAR API vs LimsaR","title":"Client for SODAR","text":"tables contain current SODAR API names corresponding LimsaR functions.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://bihealth.github.io/LimsaR/index.html","id":"why-limsar","dir":"","previous_headings":"","what":"Why LimsaR","title":"Client for SODAR","text":"Limsa “Soda” Finnish.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_assay_irods_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the iRODS path of an assay or study — sodar_assay_irods_path","title":"Retrieve the iRODS path of an assay or study — sodar_assay_irods_path","text":"functions retrieves iRODS path assay study.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_assay_irods_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the iRODS path of an assay or study — sodar_assay_irods_path","text":"","code":"sodar_assay_irods_path(   project_uuid,   study_uuid = NULL,   assay_uuid = NULL,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )  sodar_study_irods_path(   project_uuid,   study_uuid = NULL,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )"},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_assay_irods_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the iRODS path of an assay or study — sodar_assay_irods_path","text":"project_uuid character string containing UUID project. study_uuid character string containing UUID study. assay_uuid character string containing UUID assay. config list containing SODAR configuration. NULL, tries get global options. verbose logical value indicating whether make verbose requests. return_raw logical value indicating whether return raw response.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_assay_irods_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the iRODS path of an assay or study — sodar_assay_irods_path","text":"character string containing iRODS path assay.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_assay_irods_path.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve the iRODS path of an assay or study — sodar_assay_irods_path","text":"necessary provide assay UUID one assay project.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_category_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a list of all projects and categories belonging to a category — sodar_category_list","title":"Returns a list of all projects and categories belonging to a category — sodar_category_list","text":"function returns list projects categories belonging given category.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_category_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a list of all projects and categories belonging to a category — sodar_category_list","text":"","code":"sodar_category_list(   category_uuid,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )"},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_category_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a list of all projects and categories belonging to a category — sodar_category_list","text":"category_uuid character string containing UUID category. config list containing SODAR configuration. NULL, tries get global options. verbose logical value indicating whether make verbose requests. return_raw logical value indicating whether return raw response.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_category_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a list of all projects and categories belonging to a category — sodar_category_list","text":"color data frame (colorDF) containing SODAR project list.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the SODAR configuration. — sodar_config","title":"Set the SODAR configuration. — sodar_config","text":"function sets SODAR configuration.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the SODAR configuration. — sodar_config","text":"","code":"sodar_config(sodar_api_token, sodar_url, set_options = TRUE)"},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the SODAR configuration. — sodar_config","text":"sodar_api_token character string containing SODAR API token. sodar_url character string containing SODAR URL. set_options logical value indicating whether set global options.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the SODAR configuration. — sodar_config","text":"invisible list containing SODAR configuration.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_create_irods.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an iRODS collection for a project — sodar_create_irods","title":"Create an iRODS collection for a project — sodar_create_irods","text":"function creates iRODS collection project.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_create_irods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an iRODS collection for a project — sodar_create_irods","text":"","code":"sodar_create_irods(   project_uuid,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )"},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_create_irods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an iRODS collection for a project — sodar_create_irods","text":"project_uuid character string containing UUID project. config list containing SODAR configuration. NULL, tries get global options. verbose logical value indicating whether make verbose requests. return_raw logical value indicating whether return raw response.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_delete_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and process iRODS data requests — sodar_delete_request","title":"Create and process iRODS data requests — sodar_delete_request","text":"Create iRODS delete request object collection","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_delete_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and process iRODS data requests — sodar_delete_request","text":"","code":"sodar_delete_request(   project_uuid,   path,   description = NULL,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )  sodar_request_list(   project_uuid,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )  sodar_request_cancel(   request_uuid,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )  sodar_request_reject(   request_uuid,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )  sodar_request_accept(   request_uuid,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )"},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_delete_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and process iRODS data requests — sodar_delete_request","text":"project_uuid character string containing UUID project. path character string containing path object collection. description character string containing description request. config list containing SODAR configuration. NULL, tries get global options. verbose logical value indicating whether make verbose requests. return_raw logical value indicating whether return raw response. request_uuid character string containing UUID request (returned sodar_delete sodar_request_list).","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_file_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a file exists in iRODS using md5 checksum — sodar_file_exists","title":"Check if a file exists in iRODS using md5 checksum — sodar_file_exists","text":"function checks file exists iRODS using md5 checksum.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_file_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a file exists in iRODS using md5 checksum — sodar_file_exists","text":"","code":"sodar_file_exists(   md5,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )"},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_file_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a file exists in iRODS using md5 checksum — sodar_file_exists","text":"md5 character vector containing md5 checksums. config list containing SODAR configuration. NULL, tries get global options. verbose logical value indicating whether make verbose requests. return_raw logical value indicating whether return raw response.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_file_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a file exists in iRODS using md5 checksum — sodar_file_exists","text":"named logical vector indicating whether file exists.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_file_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List files present in a project sample data repository — sodar_file_list","title":"List files present in a project sample data repository — sodar_file_list","text":"List files present project sample data repository","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_file_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List files present in a project sample data repository — sodar_file_list","text":"","code":"sodar_file_list(   project_uuid,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )"},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_file_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List files present in a project sample data repository — sodar_file_list","text":"project_uuid character string containing UUID project. config list containing SODAR configuration. NULL, tries get global options. verbose logical value indicating whether make verbose requests. return_raw logical value indicating whether return raw response.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_investigation_retrieve.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve details of an investigation from a project — sodar_investigation_retrieve","title":"Retrieve details of an investigation from a project — sodar_investigation_retrieve","text":"function retrieves details investigation project. can used retrieve assay UUIDs landing zone operations.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_investigation_retrieve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve details of an investigation from a project — sodar_investigation_retrieve","text":"","code":"sodar_investigation_retrieve(   project_uuid,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )"},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_investigation_retrieve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve details of an investigation from a project — sodar_investigation_retrieve","text":"project_uuid character string containing UUID project. config list containing SODAR configuration. NULL, tries get global options. verbose logical value indicating whether make verbose requests. return_raw logical value indicating whether return raw response.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_investigation_retrieve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve details of an investigation from a project — sodar_investigation_retrieve","text":"list details investigation.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_irods_configuration.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the iRODS configuration — sodar_irods_configuration","title":"Retrieve the iRODS configuration — sodar_irods_configuration","text":"Retrieve iRODS configuration","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_irods_configuration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the iRODS configuration — sodar_irods_configuration","text":"","code":"sodar_irods_configuration(   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )"},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_irods_configuration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the iRODS configuration — sodar_irods_configuration","text":"config list containing SODAR configuration. NULL, tries get global options. verbose logical value indicating whether make verbose requests. return_raw logical value indicating whether return raw response.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_irods_configuration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the iRODS configuration — sodar_irods_configuration","text":"list iRODS configuration.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_lz_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a landing zone for a project — sodar_lz_create","title":"Create a landing zone for a project — sodar_lz_create","text":"function creates landing zone project.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_lz_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a landing zone for a project — sodar_lz_create","text":"","code":"sodar_lz_create(   project_uuid,   create_colls = TRUE,   restrict_colls = TRUE,   title = \"\",   assay_uuid = NULL,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )"},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_lz_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a landing zone for a project — sodar_lz_create","text":"project_uuid character string containing UUID project. create_colls logical value indicating whether create collections landing zone. restrict_colls logical value indicating whether restrict collections landing zone. title character string containing title suffix landing zone. assay_uuid character string containing UUID assay associate landing zone. NULL, first assay found used. config list containing SODAR configuration. NULL, tries get global options. verbose logical value indicating whether make verbose requests. return_raw logical value indicating whether return raw response.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_lz_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a landing zone for a project — sodar_lz_create","text":"list details landing zone created.","code":""},{"path":[]},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_lz_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List landing zones for a project — sodar_lz_list","title":"List landing zones for a project — sodar_lz_list","text":"function lists landing zones project.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_lz_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List landing zones for a project — sodar_lz_list","text":"","code":"sodar_lz_list(   project_uuid,   verbose = getOption(\"verbose\", default = FALSE),   config = NULL )"},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_lz_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List landing zones for a project — sodar_lz_list","text":"project_uuid character string containing UUID project. verbose logical value indicating whether make verbose requests. config list containing SODAR configuration. NULL, tries get global options.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_lz_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List landing zones for a project — sodar_lz_list","text":"colorDF data frame details landing zones. Several columns hidden better readability, can still accessed.","code":""},{"path":[]},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_lz_retrieve.html","id":null,"dir":"Reference","previous_headings":"","what":"Handling existing landing zones — sodar_lz_retrieve","title":"Handling existing landing zones — sodar_lz_retrieve","text":"functions retrieve information landing zone project, delete existing landing zones etc.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_lz_retrieve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handling existing landing zones — sodar_lz_retrieve","text":"","code":"sodar_lz_retrieve(   lz_uuid,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )  sodar_lz_status(   lz_uuid,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE) )  sodar_lz_delete(   lz_uuid,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )  sodar_lz_move(   lz_uuid,   move = TRUE,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )  sodar_lz_validate(   lz_uuid,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )"},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_lz_retrieve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handling existing landing zones — sodar_lz_retrieve","text":"lz_uuid character string containing UUID landing zone. config list containing SODAR configuration. NULL, tries get global options. verbose logical value indicating whether make verbose requests. return_raw logical value indicating whether return raw response. move logical value indicating whether move landing zone validation.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_lz_retrieve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handling existing landing zones — sodar_lz_retrieve","text":"list details landing zone.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_project_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new project in SODAR — sodar_project_create","title":"Create a new project in SODAR — sodar_project_create","text":"function creates new project category SODAR.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_project_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new project in SODAR — sodar_project_create","text":"","code":"sodar_project_create(   title,   parent,   type = \"PROJECT\",   description = NULL,   readme = NULL,   public_guest_access = FALSE,   owner = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE,   config = NULL )"},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_project_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new project in SODAR — sodar_project_create","text":"title character string containing title project category; mandatory. parent character string containing UUID parent project category; mandatory. type character string indicating whether project category. description character string containing description project category (optional). readme character string containing README project category (optional). public_guest_access logical value indicating whether project category public guest access. owner character string containing UUID owner project category. NULL, current user (indicated API token) set owner. verbose logical value indicating whether make verbose requests. return_raw logical value indicating whether return raw response. config list containing SODAR configuration. NULL, tries get global options.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_project_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new project in SODAR — sodar_project_create","text":"list details project created.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_project_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the SODAR project list table. — sodar_project_list","title":"Get the SODAR project list table. — sodar_project_list","text":"function gets SODAR project list table.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_project_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the SODAR project list table. — sodar_project_list","text":"","code":"sodar_project_list(   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )"},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_project_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the SODAR project list table. — sodar_project_list","text":"config list containing SODAR configuration. NULL, tries get global options. verbose logical value indicating whether make verbose requests. return_raw logical value indicating whether return raw response.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_project_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the SODAR project list table. — sodar_project_list","text":"color data frame (colorDF) containing SODAR project list.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_project_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the SODAR project list table. — sodar_project_list","text":"function returns data frame flavored colorDF package. allows hide multiline columns \"readme\", \"roles\" \"description\". columns still present data frame can accessed usual, shown console.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_project_retrieve.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve details of a project or category — sodar_project_retrieve","title":"Retrieve details of a project or category — sodar_project_retrieve","text":"function retrieves details project category.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_project_retrieve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve details of a project or category — sodar_project_retrieve","text":"","code":"sodar_project_retrieve(   project_uuid,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )"},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_project_retrieve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve details of a project or category — sodar_project_retrieve","text":"project_uuid character string containing UUID project category. config list containing SODAR configuration. NULL, tries get global options. verbose logical value indicating whether make verbose requests. return_raw logical value indicating whether return raw response.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_project_retrieve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve details of a project or category — sodar_project_retrieve","text":"list details project category.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_project_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a project or category in SODAR — sodar_project_update","title":"Update a project or category in SODAR — sodar_project_update","text":"function updates project category SODAR.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_project_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a project or category in SODAR — sodar_project_update","text":"","code":"sodar_project_update(   project_uuid,   title = NULL,   parent = NULL,   description = NULL,   readme = NULL,   public_guest_access = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE,   config = NULL )"},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_project_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a project or category in SODAR — sodar_project_update","text":"project_uuid character string containing UUID project category. title character string containing title project category; mandatory. parent character string containing UUID parent project category; mandatory. description character string containing description project category (optional). readme character string containing README project category (optional). public_guest_access logical value indicating whether project category public guest access. verbose logical value indicating whether make verbose requests. return_raw logical value indicating whether return raw response. config list containing SODAR configuration. NULL, tries get global options.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_project_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a project or category in SODAR — sodar_project_update","text":"list details project updated.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_sheet_export_zip.html","id":null,"dir":"Reference","previous_headings":"","what":"Export an ISAtab sample sheet from a project — sodar_sheet_export_zip","title":"Export an ISAtab sample sheet from a project — sodar_sheet_export_zip","text":"function exports ISAtab sample sheet project.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_sheet_export_zip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export an ISAtab sample sheet from a project — sodar_sheet_export_zip","text":"","code":"sodar_sheet_export_zip(   project_uuid,   file,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )  sodar_sheet_export_json(   project_uuid,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )"},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_sheet_export_zip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export an ISAtab sample sheet from a project — sodar_sheet_export_zip","text":"project_uuid character string containing UUID project export. file character string containing name file exported. config list containing SODAR configuration. NULL, tries get global options. verbose logical value indicating whether make verbose requests. return_raw logical value indicating whether return raw response.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_sheet_export_zip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export an ISAtab sample sheet from a project — sodar_sheet_export_zip","text":"sodar_sheet_export_zip: name file exported. sodar_sheet_export_json: list exported isatab structure.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_sheet_import.html","id":null,"dir":"Reference","previous_headings":"","what":"Import an ISAtab sample sheet from a file — sodar_sheet_import","title":"Import an ISAtab sample sheet from a file — sodar_sheet_import","text":"function imports ISAtab sample sheet file.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_sheet_import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import an ISAtab sample sheet from a file — sodar_sheet_import","text":"","code":"sodar_sheet_import(   project_uuid,   file,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )"},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_sheet_import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import an ISAtab sample sheet from a file — sodar_sheet_import","text":"project_uuid character string containing UUID project sample sheet imported. file character string containing path ISAtab zip file. config list containing SODAR configuration. NULL, tries get global options. verbose logical value indicating whether make verbose requests. return_raw logical value indicating whether return raw response.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_sheet_import.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import an ISAtab sample sheet from a file — sodar_sheet_import","text":"list details import outcome.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_ticket_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage SODAR iRODS tickets — sodar_ticket_create","title":"Manage SODAR iRODS tickets — sodar_ticket_create","text":"functions create, retrieve deletes iRODS tickets.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_ticket_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage SODAR iRODS tickets — sodar_ticket_create","text":"","code":"sodar_ticket_create(   project_uuid,   path,   label,   date_expires = NULL,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )  sodar_ticket_list(   project_uuid,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )  sodar_ticket_retrieve(   ticket_uuid,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )  sodar_ticket_delete(   ticket_uuid,   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )"},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_ticket_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage SODAR iRODS tickets — sodar_ticket_create","text":"project_uuid character string containing UUID project. path character string containing path iRODS collection. label character string containing label ticket. date_expires character string containing expiration date ticket. config list containing SODAR configuration. NULL, tries get global options. verbose logical value indicating whether make verbose requests. return_raw logical value indicating whether return raw response. ticket_uuid character string containing UUID ticket.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_ticket_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manage SODAR iRODS tickets — sodar_ticket_create","text":"list details ticket.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_ticket_create.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Manage SODAR iRODS tickets — sodar_ticket_create","text":"tickets allow anonymous access selected collections project SODAR.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_whoami.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns information about the user making the request — sodar_whoami","title":"Returns information about the user making the request — sodar_whoami","text":"Returns information user making request.","code":""},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_whoami.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns information about the user making the request — sodar_whoami","text":"","code":"sodar_whoami(   config = NULL,   verbose = getOption(\"verbose\", default = FALSE),   return_raw = FALSE )"},{"path":"https://bihealth.github.io/LimsaR/reference/sodar_whoami.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns information about the user making the request — sodar_whoami","text":"config list containing SODAR configuration. NULL, tries get global options. verbose logical value indicating whether make verbose requests. return_raw logical value indicating whether return raw response.","code":""}]
